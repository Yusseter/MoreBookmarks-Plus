# Adoption effect
adopt_effect = { # Yusseter: From CKIII 2025.09.11
	$ADOPTER$ = {
		adopt = $CHILD$
		$CHILD$ = {
			set_house = $ADOPTER$.house
			add_trait = child_of_adoption # Yusseter
			# Remove bastard traits
			if = {
				limit = {
					has_any_bastard_trait_trigger = yes
				}
				remove_all_bastard_traits = yes
			}
		}
		# Parochial vassals hate this
		if = {
			limit = {
				NOR = {
					has_game_rule = adoption_always_allowed
					culture = { has_cultural_parameter = allows_adoption }
				}
			}
			every_vassal = {
				custom = every_courtly_vassal_actor
				limit = {
					has_vassal_stance = courtly
				}
				add_opinion = {
					modifier = angry_opinion
					opinion = -20
					target = $ADOPTER$
				}
			}
		}
		# Zealous vassals *hate* you adopting a heretic
		if = {
			limit = {
				faith = {
					faith_hostility_level = {
						target = $CHILD$.faith
						value >= faith_evil_level
					}
				}
			}
			every_vassal = {
				custom = every_zealot_vassal_actor
				limit = {
					has_vassal_stance = zealot
				}
				add_opinion = {
					modifier = angry_opinion
					opinion = -25
					target = $ADOPTER$
				}
			}
		}
		else_if = {
			limit = {
				faith = {
					faith_hostility_level = {
						target = $CHILD$.faith
						value >= faith_hostile_level
					}
				}
			}
			every_vassal = {
				custom = every_zealot_vassal_actor
				limit = {
					has_vassal_stance = zealot
				}
				add_opinion = {
					modifier = angry_opinion
					opinion = -20
					target = $ADOPTER$
				}
			}
		}
		else_if = {
			limit = {
				faith = {
					faith_hostility_level = {
						target = $CHILD$.faith
						value >= faith_astray_level
					}
				}
			}
			every_vassal = {
				custom = every_zealot_vassal_actor
				limit = {
					has_vassal_stance = zealot
				}
				add_opinion = {
					modifier = angry_opinion
					opinion = -10
					target = $ADOPTER$
				}
			}
		}
		# Minority vassals *love* you adopting a foreigner
		if = {
			limit = {
				OR = {
					faith = {
						faith_hostility_level = {
							target = $CHILD$.faith
							value >= faith_astray_level
						}
					}
					NOT = { culture = $CHILD$.culture }
				}
			}
			every_vassal = {
				custom = every_minority_vassal_actor
				limit = {
					has_vassal_stance = minority
				}
				add_opinion = {
					modifier = respect_opinion
					opinion = 25
					target = $ADOPTER$
				}
			}
		}
		# Your other children hate this
		every_child = {
			custom = every_non_content_child
			add_opinion = {
				modifier = angry_opinion
				opinion = -20
				target = $ADOPTER$
			}
		}
		# Player heirs *hate* you adopting someone to be your new heir
		if = {
			limit = {
				exists = player_heir
				OR = {
					player_heir.age < $CHILD$.age
					player_heir = { has_trait = ambitious }
				}
				NOT = {
					player_heir = { has_trait = humble }
					player_heir = { has_trait = content }
					player_heir = { has_trait = forgiving }
				}
			}
			player_heir = {
				progress_towards_rival_effect = {
					CHARACTER = $ADOPTER$
					REASON = rival_adopted_another_heir
					OPINION = default_rival_opinion
				}
				set_relation_rival = {
					target = $CHILD$
					reason = rival_stole_my_throne
				}
			}
		}
	}
	#adopted child should travel to new parent
	$CHILD$ = {
		if = {
			limit = { exists = $ADOPTER$.capital_province } # Ward heads to landed Guardian
			$ADOPTER$.capital_province = { save_scope_as = destination_province }
		}
		else_if = { # Ward heads to Guardian's host
			limit = { exists = $ADOPTER$.host.capital_province }
			$ADOPTER$.host.capital_province = { save_scope_as = destination_province }
		}
		else = {
			$ADOPTER$.location = { save_scope_as = destination_province }
		}
		save_scope_as = adoptee
		$ADOPTER$ = {
			save_scope_as = adopter
		}
		if = {
			limit = {
				any_relation = {
					type = guardian
					NOT = { this = $ADOPTER$ }
				}
			}
			random_relation = {
				type = guardian
				limit = { NOT = { this = $ADOPTER$ } }
				save_scope_as = old_guardian
			}
			remove_guardian_effect = {
				GUARDIAN = scope:old_guardian
				WARD = scope:adoptee
				RETURN_WARD = no
				HIDE_OPINION = no
			}
		}
		if = {
			limit = { NOT = { scope:destination_province = $CHILD$.location } }
			set_variable = {
				name = adoptee_travelling_to_adopter
				years = 2
				value = scope:adopter
			}
			start_travel_plan = {
				destination = scope:destination_province
				on_start_on_action = on_adoptee_depart_for_adopter
				on_travel_planner_cancel_on_action = on_adoptee_depart_travel_planner_exit
				on_arrival_on_action = on_adoptee_arrive_at_adopter
				on_arrival_destinations = last
				return_trip = no # One way
			}
			custom_tooltip = adoptee_leaves_for_adopter_tt
		}
		if = {
			limit = {
				$ADOPTER$ = {
					has_blood_brother = yes
					any_relation = {
						type = blood_brother
						NOT = {
							is_close_family_of = $CHILD$
						}
					}
				}
			}
			$ADOPTER$ = {
				random_relation = {
					type = blood_brother
					save_scope_as = other_blood_brother
				}
			}
			mpo_blood_brother_new_family_member_opinion_effect = yes
		}
	}
}

# Adventurer Adoption effect
adventurer_adopt_effect = { # Yusseter: From CKIII 2025.09.11
	$ADOPTER$ = {
		hidden_effect = { adopt = $CHILD$ }
		$CHILD$ = {
			hidden_effect = {
				set_house = $ADOPTER$.house
				add_trait = child_of_adoption # Yusseter
				found_cadet_house_decision_effect = {
					CHARACTER = scope:recipient
					PRESTIGE = 0
				}
			}
			custom_tooltip = adventurer_adoption_child_tt
			# Remove bastard traits
			if = {
				limit = {
					has_any_bastard_trait_trigger = yes
				}
				remove_all_bastard_traits = yes
			}
			# Remove disinherited if you're the house head.
			if = {
				limit = {
					$ADOPTER$.house.house_head = $ADOPTER$
					has_trait = disinherited
				}
				remove_trait = disinherited
			}
		}
		# Your other children hate this
		every_child = {
			custom = every_non_content_child
			add_opinion = {
				modifier = angry_opinion
				opinion = -20
				target = $ADOPTER$
			}
		}
		# Player heirs *hate* you adopting someone to be your new heir
		if = {
			limit = {
				exists = player_heir
				OR = {
					player_heir.age < $CHILD$.age
					player_heir = { has_trait = ambitious }
				}
				NOR = {
					player_heir = { has_trait = humble }
					player_heir = { has_trait = content }
					player_heir = { has_trait = forgiving }
				}
			}
			player_heir = {
				progress_towards_rival_effect = {
					CHARACTER = $ADOPTER$
					REASON = rival_adopted_another_heir
					OPINION = default_rival_opinion
				}
				set_relation_rival = {
					target = $CHILD$
					reason = rival_stole_my_throne
				}
			}
		}
	}
	#adopted child should travel to new parent
	$CHILD$ = {
		if = {
			limit = { exists = $ADOPTER$.capital_province } # Ward heads to landed Guardian
			$ADOPTER$.capital_province = { save_scope_as = destination_province }
		}
		else_if = { # Ward heads to Guardian's host
			limit = { exists = $ADOPTER$.host.capital_province }
			$ADOPTER$.host.capital_province = { save_scope_as = destination_province }
		}
		else = {
			$ADOPTER$.location = { save_scope_as = destination_province }
		}
		save_scope_as = adoptee
		$ADOPTER$ = {
			save_scope_as = adopter
		}
		if = {
			limit = {
				any_relation = {
					type = guardian
					NOT = { this = $ADOPTER$ }
				}
			}
			random_relation = {
				type = guardian
				limit = { NOT = { this = $ADOPTER$ } }
				save_scope_as = old_guardian
			}
			remove_guardian_effect = {
				GUARDIAN = scope:old_guardian
				WARD = scope:adoptee
				RETURN_WARD = no
				HIDE_OPINION = no
			}
		}
		if = {
			limit = { NOT = { scope:destination_province = $CHILD$.location } }
			set_variable = {
				name = adoptee_travelling_to_adopter
				years = 2
				value = scope:adopter
			}
			start_travel_plan = {
				destination = scope:destination_province
				on_start_on_action = on_adoptee_depart_for_adopter
				on_travel_planner_cancel_on_action = on_adoptee_depart_travel_planner_exit
				on_arrival_on_action = on_adoptee_arrive_at_adopter
				on_arrival_destinations = last
				return_trip = no # One way
			}
			custom_tooltip = adoptee_leaves_for_adopter_tt
		}
		#Enters into blood brotherhood family bond
		if = {
			limit = {
				$ADOPTER$ = {
					has_blood_brother = yes
					any_relation = {
						type = blood_brother
						NOT = {
							is_close_family_of = $CHILD$
						}
					}
				}
			}
			$ADOPTER$ = {
				random_relation = {
					type = blood_brother
					save_scope_as = other_blood_brother
				}
			}
			mpo_blood_brother_new_family_member_opinion_effect = yes
		}
	}
}